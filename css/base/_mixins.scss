
// @author Hugo Giraudel
// @param {Length} $width
// @param {Length} $height
@mixin size($width, $height) {
    width: $width;
    height: $height;
}

@mixin transform($value) {
  -webkit-transform: $value ;
     -moz-transform: $value ;
      -ms-transform: $value ;
          transform: $value ;
}

@mixin transition($prop, $values...) {
  -webkit-#{$prop}: $values;
     -moz-#{$prop}: $values;
      -ms-#{$prop}: $values;
       -o-#{$prop}: $values;
             $prop: $values;
}

@mixin transition-duration($duration...) {
  -webkit-transition-property: $duration;
     -moz-transition-property: $duration;
       -o-transition-property: $duration;
          transition-property: $duration;
}

@mixin transition-timing-function($timing...) {
  -webkit-transition-timing-function: $timing;
     -moz-transition-timing-function: $timing;
       -o-transition-timing-function: $timing;
          transition-timing-function: $timing;
}

@mixin transition-delay($delay...) {
  -webkit-transition-delay: $delay;
     -moz-transition-delay: $delay;
       -o-transition-delay: $delay;
          transition-delay: $delay;
}


@mixin position($position, $top, $right, $bottom, $left) {
    position: $position !important;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

@mixin perspective($value) {
  -webkit-perspective: $value;
     -moz-perspective: $value;
      -ms-perspective: $value;
          perspective: $value;
}

@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
       -moz-box-sizing: $box-model; // Firefox <= 19
            box-sizing: $box-model;
}


@mixin appearance($appearance) {
  -webkit-appearance: $appearance; // Safari <= 5
     -moz-appearance: $appearance; // Firefox <= 19
          appearance: $appearance;
}


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
      -webkit-box-shadow:inset $top $left $blur $color;
      -moz-box-shadow:inset $top $left $blur $color;
      box-shadow:inset $top $left $blur $color;
    } @else {
      -webkit-box-shadow: $top $left $blur $color;
      -moz-box-shadow: $top $left $blur $color;
      box-shadow: $top $left $blur $color;
    }
}

@mixin no-select {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}


@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

/*
    Example usage: 
    @include animation(10s, 5s, changecolour)
 */
 @mixin animation ($animation, $delay, $duration, $timefunction, $count, $direction) {
  -webkit-animation-name: $animation;
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-timing-function: $timefunction;
  -webkit-animation-iteration-count: $count;
  -webkit-animation-direction: $direction;
  -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -moz-animation-name: $animation;
  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-timing-function: $timefunction;
  -moz-animation-iteration-count: $count;
  -moz-animation-direction: $direction;
  -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -o-animation-name: $animation;
  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-timing-function: $timefunction;
  -o-animation-iteration-count: $count;
  -o-animation-direction: $direction;
  -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  animation-name: $animation;
  animation-delay: $delay;
  animation-duration: $duration;
  animation-timing-function: $timefunction;
  animation-iteration-count: $count;
  animation-direction: $direction;
  animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}